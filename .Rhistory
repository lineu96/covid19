h <- hist(quest$tc_tempoPUniv, plot = FALSE) #histograma
breaks <- h$breaks #armazenando os breaks do histograma
classes <- cut(quest$tc_tempoPUniv, breaks = breaks,
include.lowest = TRUE, right = TRUE) #gerando classes
tb.tempo <- as.data.frame(table(classes)) #gerando tabela com faixas
tb.tempo$Perc <- prop.table(tb.tempo$Freq)
names(tb.tempo)[1] <- "Ano"
pander:::pander(tb.tempo)
```
---
#### Tabela 2
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
tempoPUniv2 <- subset(quest$tc_tempoPUniv, quest$tc_tempoPUniv < 800)
h <- hist(tempoPUniv2, plot = FALSE) #histograma
breaks <- h$breaks #armazenando os breaks do histograma
classes <- cut(tempoPUniv2, breaks = breaks,
include.lowest = TRUE, right = TRUE) #gerando classes
tb.tempo <- as.data.frame(table(classes)) #gerando tabela com faixas
tb.tempo$Perc <- prop.table(tb.tempo$Freq)
names(tb.tempo)[1] <- "Ano"
pander:::pander(tb.tempo)
```
---
#### Tabela 3
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
medidas <- data.frame(minimo = quantile(tempoPUniv2)[1],
quart1 = quantile(tempoPUniv2)[2],
media = mean(tempoPUniv2),
mediana = quantile(tempoPUniv2)[3],
moda = names(sort(table(tempoPUniv2),
decreasing = TRUE)[1]),
quart3 = quantile(tempoPUniv2)[4],
max = quantile(tempoPUniv2)[5])
row.names(medidas) <- NULL
pander(medidas)
disp <- data.frame(amplitude = diff(range(tempoPUniv2)),
variancia = var(tempoPUniv2),
desv_pad = sd(tempoPUniv2),
coef_var = 100*sd(tempoPUniv2)/mean(tempoPUniv2))
pander(disp)
```
---
#### Gráfico 1
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
plot(table(quest$tc_tempoPUniv), t = "h", xlab = "Quantidade", ylab = "Frequência",
lwd = 6, cex.axis = 0.8, main = "Tempo de deslocamento")
```
---
#### Gráfico 2
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
plot(table(tempoPUniv2), t = "h", xlab = "Quantidade", ylab = "Frequência",
lwd = 6, cex.axis = 0.8, main = "Tempo de deslocamento")
```
---
#### Gráfico 3
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
layout(mat = matrix(c(1,2),2,1, byrow=TRUE),  height = c(3,1))
par(mar=c(3.1, 3.1, 1.1, 2.1))
hist(quest$tc_tempoPUniv,col = "#CEF6F5",
main = 'Tempo de deslocamento')
boxplot(quest$tc_tempoPUniv,
horizontal=TRUE,
outline=TRUE,
frame=F,
col = "#CEECF5",
width = 10)
```
---
#### Gráfico 4
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
layout(mat = matrix(c(1,2),2,1, byrow=TRUE),  height = c(3,1))
par(mar=c(3.1, 3.1, 1.1, 2.1))
hist(tempoPUniv2,col = "#CEF6F5",
main = 'Tempo de deslocamento')
boxplot(tempoPUniv2,
horizontal=TRUE,
outline=TRUE,
frame=F,
col = "#CEECF5",
width = 10)
```
---
### Em média, quantas vezes você usa táxi/aplicativo de transporte durante o mês? {.tabset .tabset-fade}
#### Tabela 1
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
quest$td_qtddServTransp <- as.integer(quest$td_qtddServTransp)
h <- hist(quest$td_qtddServTransp, plot = FALSE) #histograma
breaks <- h$breaks #armazenando os breaks do histograma
classes <- cut(quest$td_qtddServTransp, breaks = breaks,
include.lowest = TRUE, right = TRUE) #gerando classes
tb.apl <- as.data.frame(table(classes)) #gerando tabela com faixas
tb.apl$Perc <- prop.table(tb.apl$Freq)
names(tb.apl)[1] <- "Ano"
pander:::pander(tb.apl)
```
---
#### Tabela 2
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
medidas <- data.frame(minimo = quantile(quest$td_qtddServTransp)[1],
quart1 = quantile(quest$td_qtddServTransp)[2],
media = mean(quest$td_qtddServTransp),
mediana = quantile(quest$td_qtddServTransp)[3],
moda = names(sort(table(quest$td_qtddServTransp),
decreasing = TRUE)[1]),
quart3 = quantile(quest$td_qtddServTransp)[4],
max = quantile(quest$td_qtddServTransp)[5])
row.names(medidas) <- NULL
pander(medidas)
disp <- data.frame(amplitude = diff(range(quest$td_qtddServTransp)),
variancia = var(quest$td_qtddServTransp),
desv_pad = sd(quest$td_qtddServTransp),
coef_var = 100*sd(quest$td_qtddServTransp)/mean(quest$td_qtddServTransp))
pander(disp)
```
---
#### Gráfico 1
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
plot(table(quest$td_qtddServTransp), t = "h", xlab = "Quantidade", ylab = "Frequência",
lwd = 6, cex.axis = 0.8, main = "Aplicativo de transporte")
```
---
#### Gráfico 2
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
layout(mat = matrix(c(1,2),2,1, byrow=TRUE),  height = c(3,1))
par(mar=c(3.1, 3.1, 1.1, 2.1))
hist(quest$td_qtddServTransp,col = "#CEF6F5",
main = "Aplicativo de transporte")
boxplot(quest$td_qtddServTransp,
horizontal=TRUE,
outline=TRUE,
frame=F,
col = "#CEECF5",
width = 10)
```
---
### Possui animal de estimação? {.tabset .tabset-fade}
#### Tabela
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
quest$ln_pet <-
tolower(iconv(quest$ln_pet,
to ='ASCII//TRANSLIT',
from = "UTF-8"))
quest$ln_pet <- gsub(",", ";", quest$ln_pet)
quest$ln_pet[ which(is.na(quest$ln_pet)) ] <- "nao possuo"
ar_pet<- cSplit(quest, "ln_pet", sep = ";", direction = "long")$ln_pet
ar_pet <- factor(ar_pet, levels = c("nao possuo", "cachorro",
"gato", "passaro",
"peixe", "tartaruga",
"coelho", "outro"))
fa_pet <- table(ar_pet)   # frequência absoluta
fr_pet <- prop.table(fa_pet) # frequência relativa
fac_pet <- cumsum(fr_pet)    # frequência acumulada
pet <- data.frame(niveis = names(fa_pet),
freq = as.vector(fa_pet),
freq_r = as.vector(fr_pet),
freq_ac = as.vector(fac_pet)) # unindo as informações
pander:::pander(pet) # gerando a tabela
```
---
#### Gráfico 1
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
ppet <- c(sum(quest$ln_pet == "nao possuo"),
sum(quest$ln_pet != "nao possuo"))
names(ppet) <- c("Não possui", "Possui")
par(mfrow = c(1,2))
ar_color <- c("#5882FA", "#FA5858")
pie(ppet, col = ar_color,
main = "Animais de estimação",
labels = ppet)
legend("topleft", legend = names(ppet), fill = ar_color, cex = 1)
barplot(ppet, col = ar_color,
main = "Animais de estimação",
names.arg = names(ppet),
ylim = c(0, max(ppet + 20)))
text(x = as.vector(barplot(ppet, plot = FALSE)),
y = as.vector(ppet) + 10,
labels = ppet, cex = 1)
```
---
#### Gráfico 2
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
pet$niveis <- c("Não", "Cão", "Gato", "Ave", "Peixe",
"Tartaruga", "Coelho", "Outro")
pet_ord <- arrange(pet, pet$freq)
barplot(pet_ord$freq, col = '#E0F8F7',
names.arg = pet_ord$niveis, horiz = T,
xlim = c(0, max(pet_ord$freq + 10)),
main = "Animais de estimação",
las = 2)
text(y = as.vector(barplot(pet_ord$freq, plot = FALSE)),
x = as.vector(pet_ord$freq) + 5,
labels = pet_ord$freq, cex = 1)
abline(v=50, lty=3, col = 2)
abline(v=100, lty=3, col = 2)
abline(v=150, lty=3, col = 2)
abline(v=200, lty=3, col = 2)
abline(v=250, lty=3, col = 2)
abline(v=300, lty=3, col = 2)
```
---
### Toca algum instrumento musical? {.tabset .tabset-fade}
#### Tabela
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
quest$ln_instr <-
tolower(iconv(quest$ln_instr,
to ='ASCII//TRANSLIT',
from = "UTF-8"))
quest$ln_instr <- gsub(",", ";", quest$ln_instr)
quest$ln_instr[ which(is.na(quest$ln_instr)) ] <- "nao toco nenhum instrumento"
ar_inst<- cSplit(quest, "ln_instr", sep = ";", direction = "long")$ln_instr
ar_inst <- factor(ar_inst, levels = c("nao toco nenhum instrumento",
"violao", "guitarra",
"teclado", "contrabaixo",
"bateria", "piano",
"flauta", "outro"))
fa_inst <- table(ar_inst)   # frequência absoluta
fr_inst <- prop.table(fa_inst) # frequência relativa
fac_inst <- cumsum(fr_inst)    # frequência acumulada
inst <- data.frame(niveis = names(fa_inst),
freq = as.vector(fa_inst),
freq_r = as.vector(fr_inst),
freq_ac = as.vector(fac_inst)) # unindo as informações
pander:::pander(inst) # gerando a tabela
```
---
#### Gráfico 1
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
pinst <- c(sum(quest$ln_instr == "nao toco nenhum instrumento"),
sum(quest$ln_pet != "nao toco nenhum instrumento"))
names(pinst) <- c("Toca", "Não toca")
par(mfrow = c(1,2))
ar_color <- c("#5882FA", "#FA5858")
pie(pinst, col = ar_color,
main = "Instrumentos musicais",
labels = pinst)
legend("topleft", legend = names(pinst), fill = ar_color, cex = 1)
barplot(pinst, col = ar_color,
main = "Instrumentos musicais",
names.arg = names(pinst),
ylim = c(0, max(pinst + 20)))
text(x = as.vector(barplot(pinst, plot = FALSE)),
y = as.vector(pinst) + 10,
labels = pinst, cex = 1)
```
---
#### Gráfico 2
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
inst$niveis <- c("Não", "Violão", "Guitarra", "Teclado", "Baixo",
"Bateria", "Piano", "Flauta", "Outro")
inst_ord <- arrange(inst, inst$freq)
barplot(inst_ord$freq, col = '#CEF6CE',
names.arg = inst_ord$niveis, horiz = T,
xlim = c(0, max(inst_ord$freq + 10)),
main = "Instrumentos musicais",
las = 2)
text(y = as.vector(barplot(inst_ord$freq, plot = FALSE)),
x = as.vector(inst_ord$freq) + 5,
labels = inst_ord$freq, cex = 1)
abline(v=50, lty=3, col = 2)
abline(v=100, lty=3, col = 2)
abline(v=150, lty=3, col = 2)
abline(v=200, lty=3, col = 2)
abline(v=250, lty=3, col = 2)
abline(v=300, lty=3, col = 2)
```
---
### De quais redes sociais você participa? {.tabset .tabset-fade}
#### Tabela
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
quest$ln_rede <- gsub(",", ";", quest$ln_rede)
quest$ln_rede[ which(is.na(quest$ln_rede)) ] <- "Nenhuma"
ar_rede<- cSplit(quest, "ln_rede", sep = ";", direction = "long")$ln_rede
ar_rede <- factor(ar_rede, levels = c("Facebook", "Twitter", "Google+", "Instagram",
"Linkedin", "Outras", "Nenhuma"))
fa_rede <- table(ar_rede)   # frequência absoluta
fr_rede <- prop.table(fa_rede) # frequência relativa
fac_rede <- cumsum(fr_rede)    # frequência acumulada
rede <- data.frame(niveis = names(fa_rede),
freq = as.vector(fa_rede),
freq_r = as.vector(fr_rede),
freq_ac = as.vector(fac_rede)) # unindo as informações
rede$niveis <- as.vector(rede$niveis)
rede[7,1] <- 'Nao tem'
pander:::pander(rede) # gerando a tabela
```
---
#### Gráfico
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
rede$niveis <- c('Face', 'Twitter', 'Google+',
'Insta', 'Linkedin', 'Outras',
'Nao tem')
rede_ord <- arrange(rede, rede$freq)
bp <- barplot(rede_ord$freq,
names.arg = rede_ord$niveis,
col = '#81F7BE',
main = 'Redes sociais',
xlab = 'Frequência',
ylab = '',
horiz = T,
las=2,
xlim = c(0, max(rede_ord$freq)+50))
text(y = c(bp),
x = rede_ord$freq,
labels = rede_ord$freq,
pos = 4)
abline(v=50, lty=3, col = 2)
abline(v=100, lty=3, col = 2)
abline(v=150, lty=3, col = 2)
abline(v=200, lty=3, col = 2)
abline(v=250, lty=3, col = 2)
abline(v=300, lty=3, col = 2)
```
---
## Questões extra
### Quantos anos você acha que a pessoa da foto abaixo tem?
Foram mostradas 2 fotos distintas: uma para os 174 primeiros respondentes e outra pros demais.
---
#### Geral {.tabset .tabset-fade}
---
##### Tabela 1
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
quest$tc_idadeProf <- as.numeric(quest$tc_idadeProf)
h <- hist(quest$tc_idadeProf, plot = FALSE) #histograma
breaks <- h$breaks #armazenando os breaks do histograma
classes <- cut(quest$tc_idadeProf, breaks = breaks,
include.lowest = TRUE, right = TRUE) #gerando classes
tb.idade <- as.data.frame(table(classes)) #gerando tabela com faixas
tb.idade$Perc <- prop.table(tb.idade$Freq)
names(tb.idade)[1] <- "Idade"
pander:::pander(tb.idade)
```
---
##### Tabela 2
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
medidas <- data.frame(minimo = quantile(quest$tc_idadeProf)[1],
quart1 = quantile(quest$tc_idadeProf)[2],
media = mean(quest$tc_idadeProf),
mediana = quantile(quest$tc_idadeProf)[3],
moda = names(sort(table(quest$tc_idadeProf),
decreasing = TRUE)[1]),
quart3 = quantile(quest$tc_idadeProf)[4],
max = quantile(quest$tc_idadeProf)[5])
row.names(medidas) <- NULL
pander(medidas)
disp <- data.frame(amplitude = diff(range(quest$tc_idadeProf)),
variancia = var(quest$tc_idadeProf),
desv_pad = sd(quest$tc_idadeProf),
coef_var = 100*sd(quest$tc_idadeProf)/mean(quest$tc_idadeProf))
pander(disp)
```
---
##### Gráfico 1
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
plot(table(quest$tc_idadeProf), t = "h", xlab = "Idade", ylab = "Frequência",
lwd = 6, cex.axis = 0.8, main = "Idade professor")
```
---
##### Gráfico 2
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
layout(mat = matrix(c(1,2),2,1, byrow=TRUE),  height = c(3,1))
par(mar=c(3.1, 3.1, 1.1, 2.1))
hist(quest$tc_idadeProf,col = "#CEF6F5", main = 'Idade professor')
boxplot(quest$tc_idadeProf,
horizontal=TRUE,
outline=TRUE,
frame=F,
col = "#CEECF5",
width = 10)
```
---
##### 2019
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
layout(mat = matrix(c(1,2),2,1, byrow=TRUE),  height = c(3,1))
par(mar=c(3.1, 3.1, 1.1, 2.1))
hist(antigo$tc_idadeProf,col = "#CEF6F5", main = 'Idade professor')
boxplot(antigo$tc_idadeProf,
horizontal=TRUE,
outline=TRUE,
frame=F,
col = "#CEECF5",
width = 10)
```
---
#### Foto 1 {.tabset .tabset-fade}
<center>
<table><tr>
<td> <img src="img/pj.jpeg" alt="Drawing" style="width: 350px;"/> </td>
</tr></table>
</center>
---
##### Tabela 1
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=FALSE, echo = TRUE}
idade_prof1 <- quest$tc_idadeProf[1:174]
h <- hist(idade_prof1, plot = FALSE) #histograma
breaks <- h$breaks #armazenando os breaks do histograma
classes <- cut(idade_prof1, breaks = breaks,
include.lowest = TRUE, right = TRUE) #gerando classes
tb.idade <- as.data.frame(table(classes)) #gerando tabela com faixas
tb.idade$Perc <- prop.table(tb.idade$Freq)
names(tb.idade)[1] <- "Idade"
pander:::pander(tb.idade)
```
---
idade_prof11 <- quest[1:174,]
medidas <- data.frame(minimo = quantile(idade_prof11$tc_idadeProf)[1],
quart1 = quantile(idade_prof11$tc_idadeProf)[2],
media = mean(idade_prof11$tc_idadeProf),
mediana = quantile(idade_prof11$tc_idadeProf)[3],
moda = names(sort(table(idade_prof11$tc_idadeProf),
decreasing = TRUE)[1]),
quart3 = quantile(idade_prof11$tc_idadeProf)[4],
max = quantile(idade_prof11$tc_idadeProf)[5])
row.names(medidas) <- NULL
pander(medidas)
disp <- data.frame(amplitude = diff(range(idade_prof11$tc_idadeProf)),
variancia = var(idade_prof11$tc_idadeProf),
desv_pad = sd(idade_prof11$tc_idadeProf),
coef_var = 100*sd(idade_prof11$tc_idadeProf)/mean(idade_prof11$tc_idadeProf))
pander(disp)
pander(medidas)
library(splitstackshape, quietly = TRUE)
library(scales)
library(psych)
library(lubridate)
library(pander)
library(DT)
library(plyr)
library(ggplot2)
#path <- "./resp_teste.csv"
path <- "./resp_mpec2020 - Respostas ao formulário 1.csv"
quest <- read.csv(path, sep = ',', encoding = 'UTF-8')
# Excluindo a primeira coluna referente aos carimbos de data e hora do google forms
quest <- quest[,-1]
# Renomeando as colunas
names(quest) <-
c(
# questoes academicas
"ln_instituicao", "ln_setorAtuacao", "lo_ativAtuacao",
"ln_setorArea", "tc_anoFimGrad", "ln_localGrad",
"ln_progGrad", "tc_inicMest", "tc_fimMest",
"ln_localMest", "td_artigo", "ln_bolsaEstudo",
"td_estatGrad", "td_estatPGrad", "lo_soft",
"ln_enumSoft", "lo_importancia", "td_notaImport",
"ln_expectAposPG", "ln_conhecTransv", "lo_videoTransv",
"ln_turma", "lo_contatoProfDisc", "lo_contatoProfColabDisc",
"ln_medio1", "ln_medio2",
# perfil do aluno
"ln_sexo", "tc_altura", "tc_peso",
"dataNasc", "ln_tipoTrab", "ln_compMoradia",
"td_numIrmao", "ln_origem", "ln_tipoHab",
"ln_tipoTransp", "tc_tempoPUniv", "td_qtddServTransp",
"ln_pet", "ln_instr","ln_rede",
#questoes extra
"tc_idadeProf", "ln_kiki"
)
paleta <- c('#F78181', #vermelho
'#21610B', #verde escuro
'#A9F5F2', #azul
'#81F781', #verde
'#2E9AFE', #azul2
'#F781F3', #rosa
'#610B21', #vermelho escuro
'#F3F781', #amarelo
'#08088A', #azul escuro
'#086A87', #azul3
'#58FA82', #laranja
'#21610B' #verde escuro
)
path2 <- "./resp_2019.csv"
antigo <- read.csv(path2, sep = ',', encoding = 'UTF-8')
antigo <- data.frame(antigo[,-1], stringsAsFactors = FALSE)
names(antigo) <- c("lo_ativAtuacao", "ln_setorAtuacao",
"tc_anoFimGrad", "ln_localGrad",
"ln_progGrad", "tc_inicMest", "tc_fimMest",
"ln_localMest", "td_artigo", "ln_bolsaEstudo",
"td_estatGrad", "td_estatPGrad", "lo_soft",
"ln_enumSoft", "lo_importancia", "td_notaImport",
"ln_tipoTrab", "ln_sexo", "td_numIrmao",
"ln_origem", "ln_compMoradia", "ln_tipoTransp",
"ln_tipoHab", "tc_tempoPUniv", "tc_altura",
"tc_peso", "ln_pet", "ln_instr", "dataNasc",
"ln_rede", "td_qtddServTransp", "lo_provNetflix",
"ln_arrozNatal", "tc_idadeProf", "ln_expectAposPG",
"ln_conhecTransv", "lo_videoTransv",
"lo_contatoProfDisc", "lo_contatoProfColabDisc")
quest$tc_altura
mean(quest$tc_altura)
quest$ln_sexo
quest_f <- subset(quest, quest$ln_sexo == "Feminino")
quest_f
mean(quest$tc_altura)
mean(quest_f$tc_altura)
mean(quest$_mtc_altura)
mean(quest$_tc_altura)
quest_f <- subset(quest, quest$ln_sexo == "Feminino")
quest_m <- subset(quest, quest$ln_sexo == "Masculino")
mean(quest$tc_altura)
mean(quest_f$tc_altura)
mean(quest$_tc_altura)
mean(quest$tc_altura)
mean(quest_f$tc_altura)
mean(quest$tc_altura)
quest_f <- subset(quest, quest$ln_sexo == "Feminino")
quest_m <- subset(quest, quest$ln_sexo == "Masculino")
mean(quest$tc_altura)
mean(quest_f$tc_altura)
mean(quest_m$tc_altura)
nrow(quest_f)
nrow(quest_m)
getwd()
setwd("~/covid19")
rmarkdown::render_site()
